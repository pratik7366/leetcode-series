You are given a string s that consists of lowercase English letters.

A string is called special if it is made up of only a single character. For example, the string "abc" is not special, whereas the strings "ddd", "zz", and "f" are special.

Return the length of the longest special substring of s which occurs at least thrice, or -1 if no special substring occurs at least thrice.

A substring is a contiguous non-empty sequence of characters within a string.



//c++ code 
class Solution {
public:
    int maximumLength(string s) {
        
    int n = s.length();
    int maxLength = -1;
    for (int len = 1; len <= n; len++) {
        unordered_map<string, int> freq;
        for (int i = 0; i <= n - len; i++) {
            string sub = s.substr(i, len);
            if (sub.find_first_not_of(sub[0]) == string::npos) {
                freq[sub]++;
                if (freq[sub] >= 3) {
                    maxLength = max(maxLength, len);
                }
            }
        }
    }
    return maxLength;
    }
};
