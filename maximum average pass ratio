There is a school that has classes of students and each class will be having a final exam. You are given a 2D integer array classes, where classes[i] = [passi, totali]. You know beforehand that in the ith class, there are totali total students, but only passi number of students will pass the exam.

You are also given an integer extraStudents. There are another extraStudents brilliant students that are guaranteed to pass the exam of any class they are assigned to. You want to assign each of the extraStudents students to a class in a way that maximizes the average pass ratio across all the classes.


//c++ code 
class Solution {
public:
    double maxAverageRatio(vector<vector<int>>& classes, int extraStudents) {
    
    auto gain = [](int pass, int total) {
        return (double)(pass + 1) / (total + 1) - (double)pass / total;
    };

    priority_queue<pair<double, pair<int, int>>> pq;
    for (auto& c : classes) {
        pq.push({gain(c[0], c[1]), {c[0], c[1]}});
    }

    while (extraStudents--) {
        auto [g, p] = pq.top(); pq.pop();
        int pass = p.first, total = p.second;
        pq.push({gain(pass + 1, total + 1), {pass + 1, total + 1}});
    }

    double result = 0.0;
    while (!pq.empty()) {
        auto [g, p] = pq.top(); pq.pop();
        result += (double)p.first / p.second;
    }

    return result / classes.size();
    }
};
