Given the integers zero, one, low, and high, we can construct a string by starting with an empty string, and then at each step perform either of the following:

Append the character '0' zero times.
Append the character '1' one times.
This can be performed any number of times.

A good string is a string constructed by the above process having a length between low and high (inclusive).

Return the number of different good strings that can be constructed satisfying these properties. Since the answer can be large, return it modulo 109 + 7.

//c++ code 

class Solution {
public:
    int countGoodStrings(int low, int high, int zero, int one) {
        
    const int MOD = 1e9 + 7;
    vector<int> dp(high + 1, 0);
    dp[0] = 1;

    for (int length = 1; length <= high; ++length) {
        if (length >= zero) {
            dp[length] = (dp[length] + dp[length - zero]) % MOD;
        }
        if (length >= one) {
            dp[length] = (dp[length] + dp[length - one]) % MOD;
        }
    }

    int result = 0;
    for (int length = low; length <= high; ++length) {
        result = (result + dp[length]) % MOD;
    }

    return result;
    }
};
