Given a string word, compress it using the following algorithm:

Begin with an empty string comp. While word is not empty, use the following operation:
Remove a maximum length prefix of word made of a single character c repeating at most 9 times.
Append the length of the prefix followed by c to comp.
Return the string comp.



//c++ code 
class Solution {
public:
    
       std::string compressedString(const std::string& word) {
    std::string comp;
    int i = 0;
    while (i < word.size()) {
        char c = word[i];
        int count = 0;
        while (i < word.size() && word[i] == c && count < 9) {
            count++;
            i++;
        }
        comp += std::to_string(count) + c;
    }
    return comp; 
    }
};
