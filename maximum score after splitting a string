
Given a string s of zeros and ones, return the maximum score after splitting the string into two non-empty substrings (i.e. left substring and right substring).

The score after splitting a string is the number of zeros in the left substring plus the number of ones in the right substring.

 


//c++ code 

class Solution {
public:
    int maxScore(string s) {
       
    int totalOnes = count(s.begin(), s.end(), '1');
    int maxScore = 0, leftZeros = 0, rightOnes = totalOnes;

    for (int i = 0; i < s.length() - 1; ++i) {
        if (s[i] == '0') ++leftZeros;
        else --rightOnes;
        maxScore = max(maxScore, leftZeros + rightOnes);
    }

    return maxScore;

    }
};
