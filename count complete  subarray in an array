
You are given an array nums consisting of positive integers.

We call a subarray of an array complete if the following condition is satisfied:

The number of distinct elements in the subarray is equal to the number of distinct elements in the whole array.
Return the number of complete subarrays.

A subarray is a contiguous non-empty part of an array.


//c++ code 

class Solution {
public:
    int countCompleteSubarrays(vector<int>& nums) {
       
    int total = 0, n = nums.size();
    unordered_set<int> distinct(nums.begin(), nums.end());
    int required = distinct.size();

    for (int i = 0; i < n; ++i) {
        unordered_map<int, int> freq;
        int uniqueCount = 0;
        for (int j = i; j < n; ++j) {
            if (++freq[nums[j]] == 1) uniqueCount++;
            if (uniqueCount == required) total++;
        }
    }

    return total; 
    }
};
