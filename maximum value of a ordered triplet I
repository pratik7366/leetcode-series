
You are given a 0-indexed integer array nums.

Return the maximum value over all triplets of indices (i, j, k) such that i < j < k. If all such triplets have a negative value, return 0.

The value of a triplet of indices (i, j, k) is equal to (nums[i] - nums[j]) * nums[k].





//c++ code 

class Solution {
public:
    long long maximumTripletValue(vector<int>& nums) {
        int n = nums.size();
    long long maxVal = 0;
    for (int j = 1; j < n - 1; j++) {
        int maxLeft = 0, maxRight = 0;
        for (int i = 0; i < j; i++) {
            maxLeft = max(maxLeft, nums[i]);
        }
        for (int k = j + 1; k < n; k++) {
            maxRight = max(maxRight, nums[k]);
        }
        maxVal = max(maxVal, (long long)(maxLeft - nums[j]) * maxRight);
    }
    return maxVal;
    }
};
