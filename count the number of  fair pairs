Given a 0-indexed integer array nums of size n and two integers lower and upper, return the number of fair pairs.

A pair (i, j) is fair if:

0 <= i < j < n, and
lower <= nums[i] + nums[j] <= upper

//c++ code 
 class Solution {
public:
    long long countFairPairs(vector<int>& nums, int lower, int upper) {
          int n = nums.size();

        sort(begin(nums), end(nums)); 

        long long result = 0;

        for(int i = 0; i < n; i++) { 
           
            int idx = lower_bound(begin(nums) + i + 1, end(nums), lower-nums[i]) - begin(nums); 
            int x   = idx - 1 - i;

            idx = upper_bound(begin(nums) + i + 1, end(nums), upper-nums[i]) - begin(nums); 

            int y = idx - 1 - i;

            result += (y-x);
        }

        return result;
    }
};
