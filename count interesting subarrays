You are given a 0-indexed integer array nums, an integer modulo, and an integer k.

Your task is to find the count of subarrays that are interesting.

A subarray nums[l..r] is interesting if the following condition holds:

Let cnt be the number of indices i in the range [l, r] such that nums[i] % modulo == k. Then, cnt % modulo == k.
Return an integer denoting the count of interesting subarrays.

Note: A subarray is a contiguous non-empty sequence of elements within an array.





//c++ code 

class Solution {
public:
    long long countInterestingSubarrays(vector<int>& nums, int modulo, int k) {
       
    unordered_map<int, long long> prefixCount;
    prefixCount[0] = 1;
    int prefix = 0;
    long long result = 0;

    for (int num : nums) {
        if (num % modulo == k) prefix++;
        int rem = (prefix - k) % modulo;
        if (rem < 0) rem += modulo;
        result += prefixCount[rem];
        prefixCount[prefix % modulo]++;
    }

    return result; 
    }
};
