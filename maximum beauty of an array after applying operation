You are given a 0-indexed array nums and a non-negative integer k.

In one operation, you can do the following:

Choose an index i that hasn't been chosen before from the range [0, nums.length - 1].
Replace nums[i] with any integer from the range [nums[i] - k, nums[i] + k].
The beauty of the array is the length of the longest subsequence consisting of equal elements.



//c++ code 
class Solution {
public:
    int maximumBeauty(vector<int>& nums, int k) {
    sort(nums.begin(), nums.end());
    int maxBeauty = 0, left = 0;
    for (int right = 0; right < nums.size(); ++right) {
        while (nums[right] - nums[left] > 2 * k) {
            ++left;
        }
        maxBeauty = max(maxBeauty, right - left + 1);
    }
    return maxBeauty;
    }
};
