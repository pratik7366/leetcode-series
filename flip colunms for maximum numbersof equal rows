You are given an m x n binary matrix matrix.

You can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from 0 to 1 or vice versa).

Return the maximum number of rows that have all values equal after some number of flips.


//c++ code 
class Solution {
public:
    int maxEqualRowsAfterFlips(vector<vector<int>>& matrix) {

            int n = matrix[0].size();
            int maxRows = 0;

            for (auto& currRow : matrix) {

                vector<int> inverted(n);
                int count = 0;

                for (int col = 0; col < n; col++) {
                    inverted[col] = currRow[col] == 0 ? 1 : 0;
                }

                for (auto& row : matrix) {

                    if (row == currRow || row == inverted) {
                        count++;
                    }
                }

                maxRows = max(maxRows, count);
            }

            return maxRows;
        }
    
};
