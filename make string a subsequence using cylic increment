you are given two 0-indexed strings str1 and str2.

In an operation, you select a set of indices in str1, and for each index i in the set, increment str1[i] to the next character cyclically. That is 'a' becomes 'b', 'b' becomes 'c', and so on, and 'z' becomes 'a'.

Return true if it is possible to make str2 a subsequence of str1 by performing the operation at most once, and false otherwise.



//c++ code 
class Solution {
public:
    bool canMakeSubsequence(string str1, string str2) {
        
    int n = str1.size(), m = str2.size(), j = 0;
    for (int i = 0; i < n && j < m; ++i) {
        if (str1[i] == str2[j] || ((str1[i] - 'a' + 1) % 26 + 'a') == str2[j]) {
            ++j;
        }
    }
    return j == m;
    }
};
