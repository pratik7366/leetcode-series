
You are given an integer array nums and an integer target.

You want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers.

For example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression "+2-1".
Return the number of different expressions that you can build, which evaluates to target.

 

//c++ code 
class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        
        unordered_map<int, int> dp;
        dp[0] = 1;
        for (int num : nums) {
            unordered_map<int, int> next;
            for (auto& [sum, count] : dp) {
                next[sum + num] += count;
                next[sum - num] += count;
            }
            dp = move(next);
        }
        return dp[target];
    }
};
