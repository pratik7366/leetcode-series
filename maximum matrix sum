You are given an n x n integer matrix. You can do the following operation any number of times:

Choose any two adjacent elements of matrix and multiply each of them by -1.
Two elements are considered adjacent if and only if they share a border.

Your goal is to maximize the summation of the matrix's elements. Return the maximum sum of the matrix's elements using the operation mentioned above.



//c++ code

class Solution {
public:
    long long maxMatrixSum(vector<vector<int>>& matrix) {
     
    int n = matrix.size();
    long long totalSum = 0;
    int minAbs = INT_MAX;
    int negativeCount = 0;

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            totalSum += abs(matrix[i][j]);
            minAbs = min(minAbs, abs(matrix[i][j]));
            if (matrix[i][j] < 0) ++negativeCount;
        }
    }

    if (negativeCount % 2 == 0) return totalSum;
    return totalSum - 2 * minAbs;

    }
};
