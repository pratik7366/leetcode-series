You are given a 0-indexed array of n integers differences, which describes the differences between each pair of consecutive integers of a hidden sequence of length (n + 1). More formally, call the hidden sequence hidden, then we have that differences[i] = hidden[i + 1] - hidden[i].

You are further given two integers lower and upper that describe the inclusive range of values [lower, upper] that the hidden sequence can contain.

For example, given differences = [1, -3, 4], lower = 1, upper = 6, the hidden sequence is a sequence of length 4 whose elements are in between 1 and 6 (inclusive).
[3, 4, 1, 5] and [4, 5, 2, 6] are possible hidden sequences.
[5, 6, 3, 7] is not possible since it contains an element greater than 6.
[1, 2, 3, 4] is not possible since the differences are not correct.





//c++ code 

class Solution {
public:
    int numberOfArrays(vector<int>& differences, int lower, int upper) {
       
    long long min_prefix = 0, max_prefix = 0, prefix = 0;
    for (int diff : differences) {
        prefix += diff;
        min_prefix = min(min_prefix, prefix);
        max_prefix = max(max_prefix, prefix);
    }
    
    long long left = lower - min_prefix;
    long long right = upper - max_prefix;
    
    return max(0LL, right - left + 1); 
    }
};
