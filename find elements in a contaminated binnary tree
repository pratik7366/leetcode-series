Given a binary tree with the following rules:

root.val == 0
For any treeNode:
If treeNode.val has a value x and treeNode.left != null, then treeNode.left.val == 2 * x + 1
If treeNode.val has a value x and treeNode.right != null, then treeNode.right.val == 2 * x + 2
Now the binary tree is contaminated, which means all treeNode.val have been changed to -1.



//c++ code 

class FindElements {
    private:
    unordered_set<int> values;
    void recover(TreeNode* root, int val) {
        if (!root) return;
        root->val = val;
        values.insert(val);
        recover(root->left, 2 * val + 1);
        recover(root->right, 2 * val + 2);
    }
public:
  FindElements(TreeNode* root) {
        recover(root, 0);
    }
    
    bool find(int target) {
        return values.count(target);
   
    }
};
