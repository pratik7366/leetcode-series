You are given a 0-indexed string s and a dictionary of words dictionary. You have to break s into one or more non-overlapping substrings such that each substring is present in dictionary. There may be some extra characters in s which are not present in any of the substrings.

// c++ code 


class Solution {
public:
    int minExtraChar(string s, vector<string>& dictionary) {

        int n = s.length();
        unordered_set<string> dict(dictionary.begin(), dictionary.end());
        vector<int> dp(n + 1, 0);

        for (int i = 1; i <= n; ++i) {
            dp[i] = dp[i - 1] + 1;
            for (int len = 1; len <= i; ++len) {
                if (dict.count(s.substr(i - len, len))) {
                    dp[i] = min(dp[i], dp[i - len]);
                }
            }
        }

        return dp[n];
    }


};
