An array is considered special if every pair of its adjacent elements contains two numbers with different parity.

You are given an array of integer nums and a 2D integer matrix queries, where for queries[i] = [fromi, toi] your task is to check that 
subarray
 nums[fromi..toi] is special or not.

Return an array of booleans answer such that answer[i] is true if nums[fromi..toi] is special.

 


//c++ code
class Solution {
public:
    vector<bool> isArraySpecial(vector<int>& nums, vector<vector<int>>& queries) {

    int n = nums.size();
    vector<int> parityMismatch(n - 1, 0);
    for (int i = 0; i < n - 1; ++i)
        parityMismatch[i] = (nums[i] % 2 == nums[i + 1] % 2);

    vector<int> prefixSum(n, 0);
    for (int i = 1; i < n; ++i)
        prefixSum[i] = prefixSum[i - 1] + parityMismatch[i - 1];

    vector<bool> answer;
    for (const auto& query : queries) {
        int from = query[0], to = query[1];
        answer.push_back(prefixSum[to] - prefixSum[from] == 0);
    }

    return answer;
    }
};
